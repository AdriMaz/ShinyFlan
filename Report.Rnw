\documentclass[12pt]{article}
\usepackage[utf8]{inputenc} % To handle special characters such as ç
\usepackage[T1]{fontenc}
%\usepackage[french]{babel}
\parindent0pt
\topmargin -1cm
\oddsidemargin 0.5cm
\evensidemargin 0.5cm
\textwidth 16cm
\textheight 22cm

\newcommand{\textbfit}[1]{\textbf{\textit{#1}}}
\newcommand{\IC}[2]{[#1;#2]}

\newenvironment{changemargin}[2]{
	\begin{list}{}{%
	\setlength{\topsep}{0pt}%
	\setlength{\leftmargin}{0pt}%
	\setlength{\rightmargin}{0pt}%
	\setlength{\listparindent}{\parindent}%
	\setlength{\itemindent}{\parindent}%
	\setlength{\parsep}{0pt plus 1pt}%
	\addtolength{\leftmargin}{#1}%
	\addtolength{\rightmargin}{#2}%
	}\item }{
	\end{list}}
%%%% fin macro %%%%


\usepackage{array}
\newcolumntype{M}[1]{>{\centering} m{#1}} % Écrire sur plusieurs lignes dans un tableau

\begin{document}
%Knitr test in \LaTeX.

\section*{Data}
	\begin{changemargin}{-3cm}{-3cm}
		\centering
		<<echo=FALSE, eval=TRUE,fig.height=4.5, fig.width=10>>=
	  		mc <- RV$data1[[1]]
	  		hist(mc, nclass = input$nclass1, probability = TRUE,
	    		   ylab = "", xlab = "Mutant count", main = "Sample 1",
	    		   cex.lab = 0.8, cex.main = 1.5,
	       		 col = "azure", cex.axis = 0.8, xlim = c(0,input$max.plot1)
					 	)
				 J <- median(mc)+1.5*diff(quantile(mc, c(0.25, 0.75)))
				 abline(v = J, lty = 5, col = "red", lwd = 1.5)

				 leg <- c("Empirical distribution", "Jackpot threshold")
	       col <- c("black", "red")
	       lty <- c(NA, 5)
	       pch <- c(22, NA)
	       ptbg <- c("azure3", NA)

				 if(!input$fluct){
				 	 require(flan, quietly = TRUE)
					 X <- 0:max(mc)
					 if(!is.null(RV$res)) {
		         if(!input$twosample){
		           mut <- RV$res$estimate[1]
		           fit <- if(input$estfit) RV$res$estimate[2] else as.numeric(input$fitvalue1)
		         } else {
		           mut <- RV$res$estimate[1,1]
		           fit <- if(input$estfit) RV$res$estimate[1,2] else as.numeric(input$fitvalue1)
		         }
		         names(mut) <- NULL ; names(fit) <- NULL
	           points(X,dflan(X,mutations = mut,
	                         fitness = fit, death = as.numeric(input$death1), plateff = as.numeric(input$plateff1),
	                         model = input$model), col = "blue3", pch = 4, lwd = 1.5)

						 leg <- c(leg, "Estimated distribution")
	           col <- c(col, "blue3")
	           pch <- c(pch, 4)
	           ptbg <- c(ptbg, NA)
	           lty <- c(lty, NA)
					 }
         }
				 legend("topright", legend = leg, pch = pch, pt.bg = ptbg, pt.cex = 2, lty = lty, lwd = 1.5, col = col)
		 @
	%  \end{center}
\end{changemargin}
\begin{changemargin}{-3cm}{-3cm}
		\centering
	%  \begin{center}
			<<result='asis', echo=FALSE, fig.height=4.5, fig.width=10>>=
				if(!is.null(RV$data2)) {
					mc <- RV$data2[[1]]
					hist(mc, nclass = input$nclass2, probability = TRUE,
							 ylab = "", xlab = "Mutant count", main = "Sample 2",
							 cex.lab = 0.8, cex.main = 1.5,
						 col = "bisque", cex.axis = 0.8, xlim = c(0,input$max.plot2)
						 )
					 J <- median(mc)+1.5*diff(quantile(mc, c(0.25, 0.75)))
					 abline(v = J, lty = 5, col = "darkblue", lwd = 1.5)
					 leg <- c("Empirical distribution", "Jackpot threshold")
		       col <- c("black", "darkblue")
		       lty <- c(NA, 5)
		       pch <- c(22, NA)
		       ptbg <- c("bisque", NA)

					 if(!input$fluct){
					 	 require(flan, quietly = TRUE)
						 X <- 0:max(mc)
						 if(!is.null(RV$res)) {
		           mut <- RV$res$estimate[2,1]
		           fit <- if(input$estfit) RV$res$estimate[2,2] else as.numeric(input$fitvalue2)
			         names(mut) <- NULL ; names(fit) <- NULL
		           points(X,dflan(X,mutations = mut,
		                         fitness = fit, death = as.numeric(input$death2), plateff = as.numeric(input$plateff2),
		                         model = input$model), col = "forestgreen", pch = 4, lwd = 1.5)

							 leg <- c(leg, "Estimated distribution")
		           col <- c(col, "forestgreen")
		           pch <- c(pch, 4)
		           ptbg <- c(ptbg, NA)
		           lty <- c(lty, NA)
						 }
	         }
					 legend("topright", legend = leg, pch = pch, pt.bg = ptbg, pt.cex = 2, lty = lty, lwd = 1.5, col = col)
				 }
			@
		% \end{center}
	\end{changemargin}

  \newpage

\section*{Parameter settings}
%
% "With Final counts? & ", if(length(RV$data1) == 2) "Yes \\texttt{fn}" else "No", "& \\tabularnewline
  \begin{center}
  	\renewcommand{\arraystretch}{1.5}
    <<results='asis', echo=FALSE>>=
      if(!input$twosample){
				cat(paste(
          "\\begin{tabular}{|c|c|c|}
            \\hline
            & Variable name & Value \\tabularnewline
            \\hline",
            if(!input$estfit){paste(
	            "Fitness & \\texttt{fitness} & ", input$fitvalue1, "\\tabularnewline
	            \\hline")
            },
            "Death parameter & \\texttt{death} & ", input$death1, "\\tabularnewline
            \\hline
            Plating efficiency & \\texttt{plateff} & ", input$plateff1, "\\tabularnewline
            \\hline",
            if(input$fluct) {paste(
							"Final counts & \\texttt{fn} & ", if(length(RV$data1) == 1) "\\texttt{NULL}" else "cf. data",  "\\tabularnewline
							\\hline
	            Mean Final Number & \\texttt{mfn} & ", format(input$mfn1, scientific = TRUE, digit = 5), "\\tabularnewline
	            \\hline
	            Coef. Variation Final Number & \\texttt{cvfn} & ", input$cvfn1, " \\tabularnewline
	            \\hline
							")
            },
            "\\end{tabular}"
        ))
      } else {
        cat(paste(
              "\\begin{tabular}{|c|c|c|c|c|}
              \\hline
              & \\multicolumn{2}{c|}{Sample 1} & \\multicolumn{2}{c|}{Sample 2} \\tabularnewline
          \\hline
          & Variable name & Value & Variable name & Value \\tabularnewline
          \\hline",
          if(!input$estfit){paste(
            "Fitness & \\texttt{fitness1} & ", input$fitvalue1, "& \\texttt{fitness2} & ", input$fitvalue2, "\\tabularnewline
            \\hline")
          },
          "Death parameter & \\texttt{death1} & ", input$death1, "& \\texttt{death2} & ", input$death2,"\\tabularnewline
          \\hline
          Plating efficiency & \\texttt{plateff1} & ", input$plateff1, "& \\texttt{plateff2} & ", input$plateff2, "\\tabularnewline
          \\hline",
          if(input$fluct) {paste(
						"Final counts & \\texttt{fn1} & ", if(length(RV$data1) == 1) "\\texttt{NULL} &" else "cf. data &", "\\texttt{fn2} & ", if(length(RV$data2) == 1) "\\texttt{NULL}" else "cf. data" , "\\tabularnewline
						\\hline
            Mean Final Number & \\texttt{mfn1} & ", format(input$mfn1, scientific = TRUE, digit = 5), "& \\texttt{mfn2} & ", format(input$mfn2, scientific = TRUE, digit = 5), "\\tabularnewline
            \\hline
            Coef. Variation Final Number & \\texttt{cvfn1} & ", input$cvfn1, "& \\texttt{cvfn2} & ", input$cvfn2, "\\tabularnewline
            \\hline")
          },
          "\\end{tabular}"
          ))
        }
  @
  \end{center}

  \section*{Estimation settings}
  \begin{center}
    \renewcommand{\arraystretch}{1.5}
    <<results='asis', echo = FALSE>>=
      cat(paste(
        "\\begin{tabular}{|c|c|c|}
          \\hline
          & Variable name & Value \\tabularnewline
          \\hline
          Growth model & \\texttt{model} & \\texttt{",input$model ,"}\\tabularnewline
          \\hline
          Estimation method & \\texttt{method} & \\texttt{", input$method, "}\\tabularnewline\\hline",
          if(input$method == "ML" | (input$method == "P0" & input$estfit)){paste(
              "Winsor parameter & \\texttt{winsor} &",input$winsor, "\\tabularnewline\\hline"
            )
          },
          if(input$fluct) { paste(
            "Null mutation probability", if(input$twosample) "difference", "& \\texttt{mut0} & ",input$mutprobdiff0,"\\tabularnewline
            \\hline
            Alternative mutation probability", if(input$twosample) "difference", "& \\texttt{mutalt} & \\texttt{",input$mutprobdiffalt,"}\\tabularnewline
            \\hline"
            ,sep="")
          } else { paste(
            "Null mutation number", if(input$twosample) "difference", "& \\texttt{mut0} & ",input$mutdiff0,"\\tabularnewline
            \\hline
            Alternative mutation number", if(input$twosample) "difference", "& \\texttt{mutalt} & \\texttt{",input$mutdiffalt, "}\\tabularnewline
            \\hline"
            ,sep="")
          },
          if(input$estfit){ paste(
            "Null fitness", if(input$twosample) "difference", "& \\texttt{fit0} & ", input$fitdiff0, "\\tabularnewline
            \\hline
            Alternative fitness" , if(input$twosample) "difference", "& \\texttt{fitalt} & \\texttt{", input$fitdiffalt, "}\\tabularnewline
            \\hline"
            ,sep="")
          },
          "Confidence level & \\texttt{clevel} &", input$conflevel," \\tabularnewline
          \\hline
        \\end{tabular}"
      ))
    @
  \end{center}

\newpage
  \section*{R code}

  %%%%%%%Tests %%%%%%%
  <<echo=FALSE, eval=TRUE>>=
  	estfit <- input$estfit
    twosample <- input$twosample
    if(twosample){
      withfluctfn1 <- length(RV$data1) == 2
      withfluctfn2 <- length(RV$data2) == 2
      withfluctfn <- withfluctfn1 & withfluctfn2

      withfluctmfn1 <- input$fluct & (length(RV$data1) == 1)
      withfluctmfn2 <- input$fluct & (length(RV$data2) == 1)
      withfluctmfn <- withfluctmfn1 & withfluctmfn2
    } else {
      withfluctfn1 <- FALSE ; withfluctfn2 <- FALSE
      withfluctmfn1 <- FALSE ; withfluctmfn2 <- FALSE

      withfluctfn <- length(RV$data1) == 2
      withfluctmfn <- input$fluct & length(RV$data1) == 1
    }

		ml <- input$method == "ML"
		gf <- input$method == "GF"
		p0 <- input$method == "P0"

		ld <- input$model == "LD"
		h <- input$model == "H"
  @

	%%%%One-Sample, Fit, only fn, winsor %%%%
	<<echo=(!twosample)&(estfit)&(withfluctfn)&(!withfluctmfn)&(ml)&(!gf)&(!p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = mc, fn = fn,
		death = death, plateff = plateff,
		model = "LD",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "ML",
		winsor = winsor)
	@

	%%%%One-Sample, Fit, only mfn/cvfn, winsor %%%%
	<<echo=(!twosample)&(estfit)&(withfluctmfn)&(!withfluctfn)&(ml)&(!gf)&(!p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = mc,
		mfn = mfn, cvfn = cvfn,
		death = death, plateff = plateff,
		model = "LD",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "ML",
		winsor = winsor)
	@

	%%%%One-Sample, !Fit, only fn, winsor %%%%
	<<echo=(!twosample)&(!estfit)&(withfluctfn)&(!withfluctmfn)&(ml)&(!gf)&(!p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = mc, fn = fn,
		fitness = fitness, death = death, plateff = plateff,
		model = "LD",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = mutalt, method = "ML",
		winsor = winsor)
	@

	%%%%One-Sample, !Fit, only mfn/cvfn, winsor %%%%
	<<echo=(!twosample)&(!estfit)&(!withfluctfn)&(withfluctmfn)&(ml)&(!gf)&(!p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = mc,
		mfn = mfn, cvfn = cvfn,
		fitness = fitness, death = death, plateff = plateff,
		model = "LD",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "ML",
		winsor = winsor)
	@

	%%%%One-Sample, Fit, !fluct, winsor %%%%

	<<echo=(!twosample)&(estfit)&((!withfluctmfn)&(!withfluctfn))&(ml)&(!gf)&(!p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = mc,
		death = death, plateff = plateff,
		model = "LD",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "ML",
		winsor = winsor)
	@

	%%%%One-Sample, !Fit, !fluct, winsor %%%%

	<<echo=(!twosample)&(!estfit)&((!withfluctmfn)&(!withfluctfn))&(ml)&(!gf)&(!p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = mc,
		fitness = fitness, death = death, plateff = plateff,
		model = "LD",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = mutalt, method = "ML",
		winsor = winsor)
	@

	%%%%One-Sample, Fit, only fn, winsor %%%%
	<<echo=(!twosample)&(estfit)&(withfluctfn)&(!withfluctmfn)&(ml)&(!gf)&(!p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = mc, fn = fn,
		death = death, plateff = plateff,
		model = "H",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "ML",
		winsor = winsor)
	@

	%%%%One-Sample, Fit, only mfn/cvfn, winsor %%%%
	<<echo=(!twosample)&(estfit)&(withfluctmfn)&(!withfluctfn)&(ml)&(!gf)&(!p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = mc,
		mfn = mfn, cvfn = cvfn,
		death = death, plateff = plateff,
		model = "H",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "ML",
		winsor = winsor)
	@

	%%%%One-Sample, !Fit, only fn, winsor %%%%
	<<echo=(!twosample)&(!estfit)&(withfluctfn)&(!withfluctmfn)&(ml)&(!gf)&(!p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = mc, fn = fn,
		fitness = fitness, death = death, plateff = plateff,
		model = "H",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = mutalt, method = "ML",
		winsor = winsor)
	@

	%%%%One-Sample, !Fit, only mfn/cvfn, winsor %%%%
	<<echo=(!twosample)&(!estfit)&(!withfluctfn)&(withfluctmfn)&(ml)&(!gf)&(!p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = mc,
		mfn = mfn, cvfn = cvfn,
		fitness = fitness, death = death, plateff = plateff,
		model = "H",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "ML",
		winsor = winsor)
	@

	%%%%One-Sample, Fit, !fluct, winsor %%%%

	<<echo=(!twosample)&(estfit)&((!withfluctmfn)&(!withfluctfn))&(ml)&(!gf)&(!p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = mc,
		death = death, plateff = plateff,
		model = "H",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "ML",
		winsor = winsor)
	@

	%%%%One-Sample, !Fit, !fluct, winsor %%%%

	<<echo=(!twosample)&(!estfit)&((!withfluctmfn)&(!withfluctfn))&(ml)&(!gf)&(!p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = mc,
		fitness = fitness, death = death, plateff = plateff,
		model = "H",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = mutalt, method = "ML",
		winsor = winsor)
	@

	<<echo=(!twosample)&(estfit)&(withfluctfn)&(!withfluctmfn)&(!ml)&(gf)&(!p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = mc, fn = fn,
		death = death, plateff = plateff,
		model = "LD",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "GF"
	)
	@

	%%%%One-Sample, Fit, only mfn/cvfn, winsor %%%%
	<<echo=(!twosample)&(estfit)&(withfluctmfn)&(!withfluctfn)&(!ml)&(gf)&(!p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = mc,
		mfn = mfn, cvfn = cvfn,
		death = death, plateff = plateff,
		model = "LD",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "GF"
	)
	@

	%%%%One-Sample, !Fit, only fn, winsor %%%%
	<<echo=(!twosample)&(!estfit)&(withfluctfn)&(!withfluctmfn)&(!ml)&(gf)&(!p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = mc, fn = fn,
		fitness = fitness, death = death, plateff = plateff,
		model = "LD",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = mutalt, method = "GF"
	)
	@

	%%%%One-Sample, !Fit, only mfn/cvfn, winsor %%%%
	<<echo=(!twosample)&(!estfit)&(!withfluctfn)&(withfluctmfn)&(!ml)&(gf)&(!p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = mc,
		mfn = mfn, cvfn = cvfn,
		fitness = fitness, death = death, plateff = plateff,
		model = "LD",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "GF"
	)
	@

	%%%%One-Sample, Fit, !fluct, winsor %%%%

	<<echo=(!twosample)&(estfit)&((!withfluctmfn)&(!withfluctfn))&(!ml)&(gf)&(!p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = mc,
		death = death, plateff = plateff,
		model = "LD",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "GF"
	)
	@

	%%%%One-Sample, !Fit, !fluct, winsor %%%%

	<<echo=(!twosample)&(!estfit)&((!withfluctmfn)&(!withfluctfn))&(!ml)&(gf)&(!p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = mc,
		fitness = fitness, death = death, plateff = plateff,
		model = "LD",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = mutalt, method = "GF"
	)
	@

	%%%%One-Sample, Fit, only fn, winsor %%%%
	<<echo=(!twosample)&(estfit)&(withfluctfn)&(!withfluctmfn)&(!ml)&(gf)&(!p0)&(!ld)&(h)&(!ml)&(gf)&(!p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = mc, fn = fn,
		death = death, plateff = plateff,
		model = "H",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "GF"
	)
	@

	%%%%One-Sample, Fit, only mfn/cvfn, winsor %%%%
	<<echo=(!twosample)&(estfit)&(withfluctmfn)&(!withfluctfn)&(!ml)&(gf)&(!p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = mc,
		mfn = mfn, cvfn = cvfn,
		death = death, plateff = plateff,
		model = "H",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "GF"
	)
	@

	%%%%One-Sample, !Fit, only fn, winsor %%%%
	<<echo=(!twosample)&(!estfit)&(withfluctfn)&(!withfluctmfn)&(!ml)&(gf)&(!p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = mc, fn = fn,
		fitness = fitness, death = death, plateff = plateff,
		model = "H",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = mutalt, method = "GF"
	)
	@

	%%%%One-Sample, !Fit, only mfn/cvfn, winsor %%%%
	<<echo=(!twosample)&(!estfit)&(!withfluctfn)&(withfluctmfn)&(!ml)&(gf)&(!p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = mc,
		mfn = mfn, cvfn = cvfn,
		fitness = fitness, death = death, plateff = plateff,
		model = "H",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "GF"
	)
	@

	%%%%One-Sample, Fit, !fluct, winsor %%%%

	<<echo=(!twosample)&(estfit)&((!withfluctmfn)&(!withfluctfn))&(!ml)&(gf)&(!p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = mc,
		death = death, plateff = plateff,
		model = "H",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "GF"
	)
	@

	%%%%One-Sample, !Fit, !fluct, winsor %%%%

	<<echo=(!twosample)&(!estfit)&((!withfluctmfn)&(!withfluctfn))&(!ml)&(gf)&(!p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = mc,
		fitness = fitness, death = death, plateff = plateff,
		model = "H",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = mutalt, method = "GF"
	)
	@



	%%%%One-Sample, Fit, only fn, winsor %%%%
	<<echo=(!twosample)&(estfit)&(withfluctfn)&(!withfluctmfn)&(!ml)&(!gf)&(p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = mc, fn = fn,
		death = death, plateff = plateff,
		model = "LD",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "P0",
		winsor = winsor)
	@

	%%%%One-Sample, Fit, only mfn/cvfn, winsor %%%%
	<<echo=(!twosample)&(estfit)&(withfluctmfn)&(!withfluctfn)&(!ml)&(!gf)&(p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = mc,
		mfn = mfn, cvfn = cvfn,
		death = death, plateff = plateff,
		model = "LD",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "P0",
		winsor = winsor)
	@

	%%%%One-Sample, !Fit, only fn, winsor %%%%
	<<echo=(!twosample)&(!estfit)&(withfluctfn)&(!withfluctmfn)&(!ml)&(!gf)&(p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = mc, fn = fn,
		fitness = fitness, death = death, plateff = plateff,
		model = "LD",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = mutalt, method = "P0"
	)
	@

	%%%%One-Sample, !Fit, only mfn/cvfn, winsor %%%%
	<<echo=(!twosample)&(!estfit)&(!withfluctfn)&(withfluctmfn)&(!ml)&(!gf)&(p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = mc,
		mfn = mfn, cvfn = cvfn,
		fitness = fitness, death = death, plateff = plateff,
		model = "LD",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "P0"
	)
	@

	%%%%One-Sample, Fit, !fluct, winsor %%%%

	<<echo=(!twosample)&(estfit)&((!withfluctmfn)&(!withfluctfn))&(!ml)&(!gf)&(p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = mc,
		death = death, plateff = plateff,
		model = "LD",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "P0",
		winsor = winsor)
	@

	%%%%One-Sample, !Fit, !fluct, winsor %%%%

	<<echo=(!twosample)&(!estfit)&((!withfluctmfn)&(!withfluctfn))&(!ml)&(!gf)&(p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = mc,
		fitness = fitness, death = death, plateff = plateff,
		model = "LD",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = mutalt, method = "P0"
	)
	@

	%%%%One-Sample, Fit, only fn, winsor %%%%
	<<echo=(!twosample)&(estfit)&(withfluctfn)&(!withfluctmfn)&(!ml)&(!gf)&(p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = mc, fn = fn,
		death = death, plateff = plateff,
		model = "H",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "P0",
		winsor = winsor)
	@

	%%%%One-Sample, Fit, only mfn/cvfn, winsor %%%%
	<<echo=(!twosample)&(estfit)&(withfluctmfn)&(!withfluctfn)&(!ml)&(!gf)&(p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = mc,
		mfn = mfn, cvfn = cvfn,
		death = death, plateff = plateff,
		model = "H",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "P0",
		winsor = winsor)
	@

	%%%%One-Sample, !Fit, only fn, winsor %%%%
	<<echo=(!twosample)&(!estfit)&(withfluctfn)&(!withfluctmfn)&(!ml)&(!gf)&(p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = mc, fn = fn,
		fitness = fitness, death = death, plateff = plateff,
		model = "H",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = mutalt, method = "P0"
	)
	@

	%%%%One-Sample, !Fit, only mfn/cvfn, winsor %%%%
	<<echo=(!twosample)&(!estfit)&(!withfluctfn)&(withfluctmfn)&(!ml)&(!gf)&(p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = mc,
		mfn = mfn, cvfn = cvfn,
		fitness = fitness, death = death, plateff = plateff,
		model = "H",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "P0"
	)
	@

	%%%%One-Sample, Fit, !fluct, winsor %%%%

	<<echo=(!twosample)&(estfit)&((!withfluctmfn)&(!withfluctfn))&(!ml)&(!gf)&(p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = mc,
		death = death, plateff = plateff,
		model = "H",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "P0",
		winsor = winsor)
	@

	%%%%One-Sample, !Fit, !fluct, winsor %%%%

	<<echo=(!twosample)&(!estfit)&((!withfluctmfn)&(!withfluctfn))&(!ml)&(!gf)&(p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = mc,
		fitness = fitness, death = death, plateff = plateff,
		model = "H",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = mutalt, method = "P0"
	)
	@






	%%%%Two-Sample, Fit, only fn, winsor %%%%
	<<echo=(twosample)&(estfit)&(withfluctfn)&(!withfluctmfn)&(ml)&(!gf)&(!p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(fn1, fn2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "LD",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "ML",
		winsor = winsor)
	@

	%%%%Two-Sample, Fit, only mfn/cvfn, winsor %%%%
	<<echo=(twosample)&(estfit)&(withfluctmfn)&(!withfluctfn1)&(!withfluctfn2)&(ml)&(!gf)&(!p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2),
		mfn = list(mfn1, mfn2), cvfn = list(cvfn1, cvfn2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "LD",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "ML",
		winsor = winsor)
	@

	%%%%Two-Sample, !Fit, only fn, winsor %%%%
	<<echo=(twosample)&(!estfit)&(withfluctfn)&(!withfluctmfn1)&(!withfluctmfn2)&(ml)&(!gf)&(!p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(fn1, fn2),
		fitness = c(fitness1, fitness2), death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "LD",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = mutalt, method = "ML",
		winsor = winsor)
	@

	%%%%Two-Sample, !Fit, only mfn/cvfn, winsor %%%%
	<<echo=(twosample)&(!estfit)&(!withfluctfn1)&(!withfluctfn2)&(withfluctmfn)&(ml)&(!gf)&(!p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2),
		mfn = list(mfn1, mfn2), cvfn = list(cvfn1, cvfn2),
		fitness = c(fitness1, fitness2), death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "LD",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "ML",
		winsor = winsor)
	@




	%%%%Two-Sample, Fit, !fluct, winsor %%%%

	<<echo=(twosample)&(estfit)&(!withfluctmfn1)&(!withfluctmfn2)&(!withfluctfn)&(!withfluctfn2)&(ml)&(!gf)&(!p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "LD",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "ML",
		winsor = winsor)
	@

	%%%%Two-Sample, !Fit, !fluct, winsor %%%%

	<<echo=(twosample)&(!estfit)&(!withfluctmfn1)&(!withfluctmfn2)&(!withfluctfn1)&(!withfluctfn2)&(ml)&(!gf)&(!p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2),
		fitness = c(fitness1, fitness2), death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "LD",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = mutalt, method = "ML",
		winsor = winsor)
	@

	%%%%Two-Sample, Fit, only fn, winsor %%%%
	<<echo=(twosample)&(estfit)&(withfluctfn)&(!withfluctmfn1)&(!withfluctmfn2)&(ml)&(!gf)&(!p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(fn1, fn2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "H",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "ML",
		winsor = winsor)
	@

	%%%%Two-Sample, Fit, only mfn/cvfn, winsor %%%%
	<<echo=(twosample)&(estfit)&(withfluctmfn)&(!withfluctfn1)&(!withfluctfn2)&(ml)&(!gf)&(!p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2),
		mfn = list(mfn1, mfn2), cvfn = list(cvfn1, cvfn2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "H",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "ML",
		winsor = winsor)
	@

	%%%%Two-Sample, !Fit, only fn, winsor %%%%
	<<echo=(twosample)&(!estfit)&(withfluctfn)&(!withfluctmfn1)&(!withfluctmfn2)&(ml)&(!gf)&(!p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(fn1, fn2),
		fitness = c(fitness1, fitness2), death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "H",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = mutalt, method = "ML",
		winsor = winsor)
	@

	%%%%Two-Sample, !Fit, only mfn/cvfn, winsor %%%%
	<<echo=(twosample)&(!estfit)&(!withfluctfn1)&(!withfluctfn2)&(withfluctmfn)&(ml)&(!gf)&(!p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2),
		mfn = list(mfn1, mfn2), cvfn = list(cvfn1, cvfn2),
		fitness = c(fitness1, fitness2), death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "H",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "ML",
		winsor = winsor)
	@

	%%%%Two-Sample, Fit, !fluct, winsor %%%%

	<<echo=(twosample)&(estfit)&((!withfluctmfn1)&(!withfluctmfn2)&(!withfluctfn1)&(!withfluctfn2))&(ml)&(!gf)&(!p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "H",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "ML",
		winsor = winsor)
	@

	%%%%Two-Sample, !Fit, !fluct, winsor %%%%

	<<echo=(twosample)&(!estfit)&((!withfluctmfn1)&(!withfluctmfn2)&(!withfluctfn1)&(!withfluctfn2))&(ml)&(!gf)&(!p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2),
		fitness = c(fitness1, fitness2), death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "H",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = mutalt, method = "ML",
		winsor = winsor)
	@

	<<echo=(twosample)&(estfit)&(withfluctfn)&(!withfluctmfn1)&(!withfluctmfn2)&(!ml)&(gf)&(!p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(fn1, fn2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "LD",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "GF"
	)
	@

	%%%%Two-Sample, Fit, only mfn/cvfn, winsor %%%%
	<<echo=(twosample)&(estfit)&(withfluctmfn)&(!withfluctfn1)&(!withfluctfn2)&(!ml)&(gf)&(!p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2),
		mfn = list(mfn1, mfn2), cvfn = list(cvfn1, cvfn2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "LD",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "GF"
	)
	@

	%%%%Two-Sample, !Fit, only fn, winsor %%%%
	<<echo=(twosample)&(!estfit)&(withfluctfn)&(!withfluctmfn1)&(!withfluctmfn2)&(!ml)&(gf)&(!p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(fn1, fn2),
		fitness = c(fitness1, fitness2), death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "LD",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = mutalt, method = "GF"
	)
	@

	%%%%Two-Sample, !Fit, only mfn/cvfn, winsor %%%%
	<<echo=(twosample)&(!estfit)&(!withfluctfn1)&(!withfluctfn2)&(withfluctmfn)&(!ml)&(gf)&(!p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2),
		mfn = list(mfn1, mfn2), cvfn = list(cvfn1, cvfn2),
		fitness = c(fitness1, fitness2), death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "LD",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "GF"
	)
	@

	%%%%Two-Sample, Fit, !fluct, winsor %%%%

	<<echo=(twosample)&(estfit)&((!withfluctmfn1)&(!withfluctmfn2)&(!withfluctfn1)&(!withfluctfn2))&(!ml)&(gf)&(!p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "LD",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "GF"
	)
	@

	%%%%Two-Sample, !Fit, !fluct, winsor %%%%

	<<echo=(twosample)&(!estfit)&((!withfluctmfn1)&(!withfluctmfn2)&(!withfluctfn1)&(!withfluctfn2))&(!ml)&(gf)&(!p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2),
		fitness = c(fitness1, fitness2), death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "LD",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = mutalt, method = "GF"
	)
	@

	%%%%Two-Sample, Fit, only fn, winsor %%%%
	<<echo=(twosample)&(estfit)&(withfluctfn)&(!withfluctmfn1)&(!withfluctmfn2)&(!ml)&(gf)&(!p0)&(!ld)&(h)&(!ml)&(gf)&(!p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(fn1, fn2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "H",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "GF"
	)
	@

	%%%%Two-Sample, Fit, only mfn/cvfn, winsor %%%%
	<<echo=(twosample)&(estfit)&(withfluctmfn)&(!withfluctfn1)&(!withfluctfn2)&(!ml)&(gf)&(!p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2),
		mfn = list(mfn1, mfn2), cvfn = list(cvfn1, cvfn2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "H",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "GF"
	)
	@

	%%%%Two-Sample, !Fit, only fn, winsor %%%%
	<<echo=(twosample)&(!estfit)&(withfluctfn)&(!withfluctmfn1)&(!withfluctmfn2)&(!ml)&(gf)&(!p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(fn1, fn2),
		fitness = c(fitness1, fitness2), death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "H",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = mutalt, method = "GF"
	)
	@

	%%%%Two-Sample, !Fit, only mfn/cvfn, winsor %%%%
	<<echo=(twosample)&(!estfit)&(!withfluctfn1)&(!withfluctfn2)&(withfluctmfn)&(!ml)&(gf)&(!p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2),
		mfn = list(mfn1, mfn2), cvfn = list(cvfn1, cvfn2),
		fitness = c(fitness1, fitness2), death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "H",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "GF"
	)
	@

	%%%%Two-Sample, Fit, !fluct, winsor %%%%

	<<echo=(twosample)&(estfit)&((!withfluctmfn1)&(!withfluctmfn2)&(!withfluctfn1)&(!withfluctfn2))&(!ml)&(gf)&(!p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "H",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "GF"
	)
	@

	%%%%Two-Sample, !Fit, !fluct, winsor %%%%

	<<echo=(twosample)&(!estfit)&((!withfluctmfn1)&(!withfluctmfn2)&(!withfluctfn1)&(!withfluctfn2))&(!ml)&(gf)&(!p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2),
		fitness = c(fitness1, fitness2), death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "H",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = mutalt, method = "GF"
	)
	@



	%%%%Two-Sample, Fit, only fn, winsor %%%%
	<<echo=(twosample)&(estfit)&(withfluctfn)&(!withfluctmfn1)&(!withfluctmfn2)&(!ml)&(!gf)&(p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(fn1, fn2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "LD",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "P0",
		winsor = winsor)
	@

	%%%%Two-Sample, Fit, only mfn/cvfn, winsor %%%%
	<<echo=(twosample)&(estfit)&(withfluctmfn)&(!withfluctfn1)&(!withfluctfn2)&(!ml)&(!gf)&(p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2),
		mfn = list(mfn1, mfn2), cvfn = list(cvfn1, cvfn2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "LD",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "P0",
		winsor = winsor)
	@

	%%%%Two-Sample, !Fit, only fn, winsor %%%%
	<<echo=(twosample)&(!estfit)&(withfluctfn)&(!withfluctmfn1)&(!withfluctmfn2)&(!ml)&(!gf)&(p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(fn1, fn2),
		fitness = c(fitness1, fitness2), death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "LD",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = mutalt, method = "P0"
	)
	@

	%%%%Two-Sample, !Fit, only mfn/cvfn, winsor %%%%
	<<echo=(twosample)&(!estfit)&(!withfluctfn1)&(!withfluctfn2)&(withfluctmfn)&(!ml)&(!gf)&(p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2),
		mfn = list(mfn1, mfn2), cvfn = list(cvfn1, cvfn2),
		fitness = c(fitness1, fitness2), death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "LD",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "P0"
	)
	@

	%%%%Two-Sample, Fit, !fluct, winsor %%%%

	<<echo=(twosample)&(estfit)&((!withfluctmfn1)&(!withfluctmfn2)&(!withfluctfn1)&(!withfluctfn2))&(!ml)&(!gf)&(p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "LD",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "P0",
		winsor = winsor)
	@

	%%%%Two-Sample, !Fit, !fluct, winsor %%%%

	<<echo=(twosample)&(!estfit)&((!withfluctmfn1)&(!withfluctmfn2)&(!withfluctfn1)&(!withfluctfn2))&(!ml)&(!gf)&(p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2),
		fitness = c(fitness1, fitness2), death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "LD",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = mutalt, method = "P0"
	)
	@

	%%%%Two-Sample, Fit, only fn, winsor %%%%
	<<echo=(twosample)&(estfit)&(withfluctfn)&(!withfluctmfn1)&(!withfluctmfn2)&(!ml)&(!gf)&(p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(fn1, fn2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "H",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "P0",
		winsor = winsor)
	@

	%%%%Two-Sample, Fit, only mfn/cvfn, winsor %%%%
	<<echo=(twosample)&(estfit)&(withfluctmfn)&(!withfluctfn1)&(!withfluctfn2)&(!ml)&(!gf)&(p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2),
		mfn = list(mfn1, mfn2), cvfn = list(cvfn1, cvfn2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "H",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "P0",
		winsor = winsor)
	@

	%%%%Two-Sample, !Fit, only fn, winsor %%%%
	<<echo=(twosample)&(!estfit)&(withfluctfn)&(!withfluctmfn1)&(!withfluctmfn2)&(!ml)&(!gf)&(p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(fn1, fn2),
		fitness = c(fitness1, fitness2), death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "H",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = mutalt, method = "P0"
	)
	@

	%%%%Two-Sample, !Fit, only mfn/cvfn, winsor %%%%
	<<echo=(twosample)&(!estfit)&(!withfluctfn1)&(!withfluctfn2)&(withfluctmfn)&(!ml)&(!gf)&(p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2),
		mfn = list(mfn1, mfn2), cvfn = list(cvfn1, cvfn2),
		fitness = c(fitness1, fitness2), death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "H",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "P0"
	)
	@

	%%%%Two-Sample, Fit, !fluct, winsor %%%%

	<<echo=(twosample)&(estfit)&((!withfluctmfn1)&(!withfluctmfn2)&(!withfluctfn1)&(!withfluctfn2))&(!ml)&(!gf)&(p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "H",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "P0",
		winsor = winsor)
	@

	%%%%Two-Sample, !Fit, !fluct, winsor %%%%

	<<echo=(twosample)&(!estfit)&((!withfluctmfn1)&(!withfluctmfn2)&(!withfluctfn1)&(!withfluctfn2))&(!ml)&(!gf)&(p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2),
		fitness = c(fitness1, fitness2), death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "H",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = mutalt, method = "P0"
	)
	@

	%%%%Two-Sample, Fit, mfn1/cvfn1 and fn2, winsor %%%%
	<<echo=(twosample)&(estfit)&(withfluctmfn1)&(!withfluctmfn2)&(!withfluctfn1)&(withfluctfn2)&(ml)&(!gf)&(!p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(NULL, fn2),
		mfn = list(mfn1, NULL), cvfn = list(cvfn1, NULL),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "LD",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "ML",
		winsor = winsor)
	@

	%%%%Two-Sample, Fit, fn1 and mfn2/cvfn2, winsor %%%%
	<<echo=(twosample)&(estfit)&(!withfluctmfn1)&(withfluctmfn2)&(withfluctfn1)&(!withfluctfn2)&(ml)&(!gf)&(!p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(fn1, NULL),
		mfn = list(NULL, mfn2), cvfn = list(NULL, cvfn2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "LD",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "ML",
		winsor = winsor)
	@


	%%%%Two-Sample, !Fit, mfn1/cvfn1 and fn2, winsor %%%%
	<<echo=(twosample)&(!estfit)&(withfluctmfn1)&(!withfluctmfn2)&(!withfluctfn1)&(withfluctfn2)&(ml)&(!gf)&(!p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(NULL, fn2),
		mfn = list(mfn1, NULL), cvfn = list(cvfn1, NULL),
		fitness = c(fitness1, fitness2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "LD",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "ML",
		winsor = winsor)
	@

	%%%%Two-Sample, !Fit, fn1 and mfn2/cvfn2, winsor %%%%
	<<echo=(twosample)&(!estfit)&(!withfluctmfn1)&(withfluctmfn2)&(withfluctfn1)&(!withfluctfn2)&(ml)&(!gf)&(!p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(fn1, NULL),
		mfn = list(NULL, mfn2), cvfn = list(NULL, cvfn2),
		fitness = c(fitness1, fitness2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "LD",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "ML",
		winsor = winsor)
	@

	%%%%Two-Sample, Fit, mfn1/cvfn1 and fn2, winsor %%%%
	<<echo=(twosample)&(estfit)&(withfluctmfn1)&(!withfluctmfn2)&(!withfluctfn1)&(withfluctfn2)&(!ml)&(!gf)&(p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(NULL, fn2),
		mfn = list(mfn1, NULL), cvfn = list(cvfn1, NULL),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "LD",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "P0",
		winsor = winsor)
	@

	%%%%Two-Sample, Fit, fn1 and mfn2/cvfn2, winsor %%%%
	<<echo=(twosample)&(estfit)&(!withfluctmfn1)&(withfluctmfn2)&(withfluctfn1)&(!withfluctfn2)&(!ml)&(!gf)&(p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(fn1, NULL),
		mfn = list(NULL, mfn2), cvfn = list(NULL, cvfn2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "LD",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "P0",
		winsor = winsor)
	@


	%%%%Two-Sample, !Fit, mfn1/cvfn1 and fn2, winsor %%%%
	<<echo=(twosample)&(!estfit)&(withfluctmfn1)&(!withfluctmfn2)&(!withfluctfn1)&(withfluctfn2)&(!ml)&(!gf)&(p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(NULL, fn2),
		mfn = list(mfn1, NULL), cvfn = list(cvfn1, NULL),
		fitness = c(fitness1, fitness2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "LD",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "P0",
		winsor = winsor)
	@

	%%%%Two-Sample, !Fit, fn1 and mfn2/cvfn2, winsor %%%%
	<<echo=(twosample)&(!estfit)&(!withfluctmfn1)&(withfluctmfn2)&(withfluctfn1)&(!withfluctfn2)&(!ml)&(!gf)&(p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(fn1, NULL),
		mfn = list(NULL, mfn2), cvfn = list(NULL, cvfn2),
		fitness = c(fitness1, fitness2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "LD",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "P0",
		winsor = winsor)
	@


	%%%%Two-Sample, Fit, mfn1/cvfn1 and fn2, winsor %%%%
	<<echo=(twosample)&(estfit)&(withfluctmfn1)&(!withfluctmfn2)&(!withfluctfn1)&(withfluctfn2)&(!ml)&(gf)&(!p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(NULL, fn2),
		mfn = list(mfn1, NULL), cvfn = list(cvfn1, NULL),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "LD",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "GF")
	@

	%%%%Two-Sample, Fit, fn1 and mfn2/cvfn2, winsor %%%%
	<<echo=(twosample)&(estfit)&(!withfluctmfn1)&(withfluctmfn2)&(withfluctfn1)&(!withfluctfn2)&(!ml)&(gf)&(!p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(fn1, NULL),
		mfn = list(NULL, mfn2), cvfn = list(NULL, cvfn2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "LD",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "GF")
	@


	%%%%Two-Sample, !Fit, mfn1/cvfn1 and fn2, winsor %%%%
	<<echo=(twosample)&(!estfit)&(withfluctmfn1)&(!withfluctmfn2)&(!withfluctfn1)&(withfluctfn2)&(!ml)&(gf)&(!p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(NULL, fn2),
		mfn = list(mfn1, NULL), cvfn = list(cvfn1, NULL),
		fitness = c(fitness1, fitness2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "LD",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "GF")
	@

	%%%%Two-Sample, !Fit, fn1 and mfn2/cvfn2, winsor %%%%
	<<echo=(twosample)&(!estfit)&(!withfluctmfn1)&(withfluctmfn2)&(withfluctfn1)&(!withfluctfn2)&(!ml)&(gf)&(!p0)&(ld)&(!h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(fn1, NULL),
		mfn = list(NULL, mfn2), cvfn = list(NULL, cvfn2),
		fitness = c(fitness1, fitness2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "LD",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "GF")
	@


	%%%%Two-Sample, Fit, mfn1/cvfn1 and fn2, winsor %%%%
	<<echo=(twosample)&(estfit)&(withfluctmfn1)&(!withfluctmfn2)&(!withfluctfn1)&(withfluctfn2)&(ml)&(!gf)&(!p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(NULL, fn2),
		mfn = list(mfn1, NULL), cvfn = list(cvfn1, NULL),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "H",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "ML",
		winsor = winsor)
	@

	%%%%Two-Sample, Fit, fn1 and mfn2/cvfn2, winsor %%%%
	<<echo=(twosample)&(estfit)&(!withfluctmfn1)&(withfluctmfn2)&(withfluctfn1)&(!withfluctfn2)&(ml)&(!gf)&(!p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(fn1, NULL),
		mfn = list(NULL, mfn2), cvfn = list(NULL, cvfn2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "H",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "ML",
		winsor = winsor)
	@


	%%%%Two-Sample, !Fit, mfn1/cvfn1 and fn2, winsor %%%%
	<<echo=(twosample)&(!estfit)&(withfluctmfn1)&(!withfluctmfn2)&(!withfluctfn1)&(withfluctfn2)&(ml)&(!gf)&(!p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(NULL, fn2),
		mfn = list(mfn1, NULL), cvfn = list(cvfn1, NULL),
		fitness = c(fitness1, fitness2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "H",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "ML",
		winsor = winsor)
	@

	%%%%Two-Sample, !Fit, fn1 and mfn2/cvfn2, winsor %%%%
	<<echo=(twosample)&(!estfit)&(!withfluctmfn1)&(withfluctmfn2)&(withfluctfn1)&(!withfluctfn2)&(ml)&(!gf)&(!p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(fn1, NULL),
		mfn = list(NULL, mfn2), cvfn = list(NULL, cvfn2),
		fitness = c(fitness1, fitness2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "H",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "ML",
		winsor = winsor)
	@

	%%%%Two-Sample, Fit, mfn1/cvfn1 and fn2, winsor %%%%
	<<echo=(twosample)&(estfit)&(withfluctmfn1)&(!withfluctmfn2)&(!withfluctfn1)&(withfluctfn2)&(!ml)&(!gf)&(p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(NULL, fn2),
		mfn = list(mfn1, NULL), cvfn = list(cvfn1, NULL),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "H",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "P0",
		winsor = winsor)
	@

	%%%%Two-Sample, Fit, fn1 and mfn2/cvfn2, winsor %%%%
	<<echo=(twosample)&(estfit)&(!withfluctmfn1)&(withfluctmfn2)&(withfluctfn1)&(!withfluctfn2)&(!ml)&(!gf)&(p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(fn1, NULL),
		mfn = list(NULL, mfn2), cvfn = list(NULL, cvfn2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "H",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "P0",
		winsor = winsor)
	@


	%%%%Two-Sample, !Fit, mfn1/cvfn1 and fn2, winsor %%%%
	<<echo=(twosample)&(!estfit)&(withfluctmfn1)&(!withfluctmfn2)&(!withfluctfn1)&(withfluctfn2)&(!ml)&(!gf)&(p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(NULL, fn2),
		mfn = list(mfn1, NULL), cvfn = list(cvfn1, NULL),
		fitness = c(fitness1, fitness2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "H",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "P0",
		winsor = winsor)
	@

	%%%%Two-Sample, !Fit, fn1 and mfn2/cvfn2, winsor %%%%
	<<echo=(twosample)&(!estfit)&(!withfluctmfn1)&(withfluctmfn2)&(withfluctfn1)&(!withfluctfn2)&(!ml)&(!gf)&(p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(fn1, NULL),
		mfn = list(NULL, mfn2), cvfn = list(NULL, cvfn2),
		fitness = c(fitness1, fitness2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "H",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "P0",
		winsor = winsor)
	@


	%%%%Two-Sample, Fit, mfn1/cvfn1 and fn2, winsor %%%%
	<<echo=(twosample)&(estfit)&(withfluctmfn1)&(!withfluctmfn2)&(!withfluctfn1)&(withfluctfn2)&(!ml)&(gf)&(!p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(NULL, fn2),
		mfn = list(mfn1, NULL), cvfn = list(cvfn1, NULL),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "H",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "GF")
	@

	%%%%Two-Sample, Fit, fn1 and mfn2/cvfn2, winsor %%%%
	<<echo=(twosample)&(estfit)&(!withfluctmfn1)&(withfluctmfn2)&(withfluctfn1)&(!withfluctfn2)&(!ml)&(gf)&(!p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(fn1, NULL),
		mfn = list(NULL, mfn2), cvfn = list(NULL, cvfn2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "H",
		mutprob0 = mut0, fitness0 = fit0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "GF")
	@


	%%%%Two-Sample, !Fit, mfn1/cvfn1 and fn2, winsor %%%%
	<<echo=(twosample)&(!estfit)&(withfluctmfn1)&(!withfluctmfn2)&(!withfluctfn1)&(withfluctfn2)&(!ml)&(gf)&(!p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(NULL, fn2),
		mfn = list(mfn1, NULL), cvfn = list(cvfn1, NULL),
		fitness = c(fitness1, fitness2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "H",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "GF")
	@

	%%%%Two-Sample, !Fit, fn1 and mfn2/cvfn2, winsor %%%%
	<<echo=(twosample)&(!estfit)&(!withfluctmfn1)&(withfluctmfn2)&(withfluctfn1)&(!withfluctfn2)&(!ml)&(gf)&(!p0)&(!ld)&(h), eval=FALSE>>=
	flan.test(mc = list(mc1, mc2), fn = list(fn1, NULL),
		mfn = list(NULL, mfn2), cvfn = list(NULL, cvfn2),
		fitness = c(fitness1, fitness2),
		death = c(death1, death2), plateff = c(plateff1, plateff2),
		model = "H",
		mutprob0 = mut0,
		conf.level = clevel,
		alternative = c(mutalt, fitalt), method = "GF")
	@




  %<<echo=FALSE, eval=warn>>=
  %	cat("Warning message(s) \n")
  %    for (w in RV$warn) cat("-",w$message,"\n")
  %@
  %
  <<echo=FALSE, eval=TRUE>>=
  	RV$res
  @

\newpage
	\section*{Parametric estimation}

	\paragraph*{Estimates}

		<<results='asis', echo=FALSE>>=
			cat(paste("\\begin{center}\\renewcommand{\\arraystretch}{1.5}",
				if(input$twosample) {
					if(!input$estfit){
						paste("\\begin{tabular}{|c|M{5cm}|}
							\\hline
							&", if(input$fluct) "Mutation probability estimate" else "Mutation number estimate", "\\tabularnewline \\hline
							Sample 1 & \\texttt{", if(input$fluct) format(RV$res$estimate[1], scientific = TRUE, digit = 5) else format(RV$res$estimate[1], digit = 5), "}\\tabularnewline\\hline
							Sample 2 & \\texttt{", if(input$fluct) format(RV$res$estimate[2], scientific = TRUE, digit = 5) else format(RV$res$estimate[2], digit = 5), "}\\tabularnewline\\hline"
						)
					} else {
						paste("\\begin{tabular}{|c|M{5cm}|M{5cm}|}
							\\hline
							&", if(input$fluct) "Mutation probability estimate" else "Mutation number estimate", "& Fitness estimate \\tabularnewline \\hline
							Sample 1 &\\texttt{", if(input$fluct) format(RV$res$estimate[1,1], digit = 5, scientific = TRUE) else  format(RV$res$estimate[1,1], digit = 5), "}&\\texttt{", format(RV$res$estimate[1,2], digit = 5), "}\\tabularnewline\\hline
							Sample 2 &\\texttt{", if(input$fluct) format(RV$res$estimate[2,1], digit = 5,scientific = TRUE) else  format(RV$res$estimate[2,1], digit = 5), "}&\\texttt{", format(RV$res$estimate[2,2], digit = 5), "}\\tabularnewline\\hline"
						)
					}
				} else {
					if(!input$estfit){
						paste("\\begin{tabular}{|M{5cm}|}
							\\hline",
							 if(input$fluct) "Mutation probability estimate" else "Mutation number estimate", "\\tabularnewline \\hline
							 \\texttt{", if(input$fluct) format(RV$res$estimate[1], digit = 5, scientific = TRUE) else format(RV$res$estimate[1], digit = 5), "}\\tabularnewline\\hline"
						)
					} else {
						paste("\\begin{tabular}{|M{5cm}|M{5cm}|}
							\\hline",
							 if(input$fluct) "Mutation probability estimate" else "Mutation number estimate", "& Fitness estimate \\tabularnewline \\hline
							\\texttt{", if(input$fluct) format(RV$res$estimate[1], digit = 5, scientific = TRUE) else  format(RV$res$estimate[1], digit = 5), " }&\\texttt{", format(RV$res$estimate[2], digit = 5), "}\\tabularnewline\\hline")
					}
				}
 				,"\\end{tabular}\\end{center}"))
		@

	\paragraph*{Confidence intervals}
	 (confidence level : \texttt{\Sexpr{input$conflevel}})

	<<results='asis', echo=FALSE>>=
			cat(paste("\\begin{center}\\renewcommand{\\arraystretch}{1.5}",
				if(input$twosample) {
					if(!input$estfit){
						paste("\\begin{tabular}{|c|}
							\\hline
							", if(input$fluct) "Mutation probability difference CI" else "Mutation number difference  CI", "\\tabularnewline \\hline
							\\texttt{\\IC{", if(input$fluct) format(RV$res$conf.int[1], digit = 5, scientific = TRUE)  else  format(RV$res$conf.int[1], digit = 5),"}{", if(input$fluct) format(RV$res$conf.int[2], digit = 5,scientific = TRUE)  else  format(RV$res$conf.int[2], digit = 5) ,"}}\\tabularnewline\\hline"
						)
					} else {
						paste("\\begin{tabular}{|c|c|}
							\\hline
							", if(input$fluct) "Mutation probability difference  CI" else "Mutation number difference  CI", "& Fitness difference  CI \\tabularnewline \\hline
							 \\texttt{\\IC{", if(input$fluct) format(RV$res$conf.int[1,1], digit = 5, scientific = TRUE)  else  format(RV$res$conf.int[1,1], digit = 5),"}{", if(input$fluct) format(RV$res$conf.int[2,1], digit = 5, scientific = TRUE)  else  format(RV$res$conf.int[2,1], digit = 5) ,"}}& \\texttt{\\IC{", format(RV$res$conf.int[1,2], digit = 5), "}{", format(RV$res$conf.int[2,2], digit = 5) , "}}\\tabularnewline\\hline"
						)
					}
				} else {
					if(!input$estfit){
						paste("\\begin{tabular}{|c|}
							\\hline
							", if(input$fluct) "Mutation probability CI" else "Mutation number CI", "\\tabularnewline \\hline
							\\texttt{\\IC{", if(input$fluct) format(RV$res$conf.int[1], digit = 5, scientific = TRUE)  else  format(RV$res$conf.int[1], digit = 5),"}{", if(input$fluct) format(RV$res$conf.int[2], digit = 5, scientific = TRUE)  else  format(RV$res$conf.int[2], digit = 5) ,"}}\\tabularnewline\\hline"
						)
					} else {
						paste("\\begin{tabular}{|c|c|}
							\\hline
							", if(input$fluct) "Mutation probability CI" else "Mutation number CI", "& Fitness CI \\tabularnewline \\hline
							\\texttt{\\IC{", if(input$fluct) format(RV$res$conf.int[1,1], digit = 5, scientific = TRUE)  else  format(RV$res$conf.int[1,1], digit = 5),"}{", if(input$fluct) format(RV$res$conf.int[2,1], digit = 5,scientific = TRUE)  else  format(RV$res$conf.int[2,1], digit = 5) ,"}}& \\texttt{\\IC{", format(RV$res$conf.int[1,2], digit = 5), "}{", format(RV$res$conf.int[2,2], digit = 5) , "}} \\tabularnewline\\hline"
						)
					}
				}
 				,"\\end{tabular}\\end{center}"))
		@


	\section*{Hypothesis testing}

      \paragraph*{Null hypotheses:}
    	\begin{itemize}
    		\item The true \textbfit{mutation \Sexpr{paste(if(!input$fluct) "number" else "probability", if(input$twosample) " difference",sep="")}} is equal to
    		\texttt{\Sexpr{if(!input$fluct & !input$twosample) input$mut0 else if(input$fluct & !input$twosample) input$mutprob0 else if(!input$fluct & input$twosample) input$mutdiff0 else if(input$fluct & input$twosample) input$mutprobdiff0}};
    		<<results='asis', echo=FALSE>>=
    		    if(input$estfit) {
    		    	cat(paste("\\item The true \\textbfit{fitness", if(input$twosample) " difference","} is equal to \\texttt{",input$fit0,"};",sep=""))
    		    }
    		@
		\end{itemize}
		\paragraph*{Alternative hypotheses:}
		\begin{itemize}
			\item The true \textbfit{mutation \Sexpr{paste(if(!input$fluct) "number" else if(input$fluct) "probability", if(input$twosample) " difference",sep="")}} is \textbfit{\Sexpr{if(input$mutalt == "two.sided") "different from" else paste(input$mutalt,"than")}} \texttt{\Sexpr{if(!input$fluct & !input$twosample) input$mut0 else if(input$fluct & !input$twosample) input$mutprob0 else if(!input$fluct & input$twosample) input$mutdiff0 else if(input$fluct & input$twosample) input$mutprobdiff0}};
			    		<<results='asis', echo=FALSE>>=
    		    if(input$estfit) {
    		    	cat(paste("\\item The true \\textbfit{fitness", if(input$twosample) " difference","}  is ",if(input$fitalt == "two.sided") "\\textbfit{different from} " else paste("\\textbfit{",input$fitalt," than }",sep=""), " \\texttt{", input$fit0,"};",sep="")
    		    	)
    		    }
    		@
		\end{itemize}
      \paragraph*{Decision:}
      \begin{itemize}
      	\item The $p$-value for \textbfit{mutation \Sexpr{paste(if(!input$fluct) "number" else if(input$fluct) "probability", if(input$twosample) " difference",sep="")}} is equal to \texttt{\Sexpr{format(RV$res$p.value[1], digit = 5, scientific=TRUE)}}.
				That suggests that the
				\textbfit{mutation \Sexpr{paste(if(!input$fluct) "number" else if(input$fluct) "probability",
					if(input$twosample) " difference",sep="")}}
				is \Sexpr{if(RV$res$p.value[1] > 0.05) "not"} significantly
				\textbfit{\Sexpr{if(input$mutalt == "two.sided") "different from" else paste(input$mutalt,"than")}}
				\texttt{\Sexpr{if(!input$fluct & !input$twosample) input$mut0 else if(input$fluct & !input$twosample) input$mutprob0 else if(!input$fluct & input$twosample) input$mutdiff0 else if(input$fluct & input$twosample) input$mutprobdiff0}};
      <<results='asis', echo=FALSE>>=
      	  if(input$estfit) {
			cat(paste("\\item The $p$-value for
				\\textbfit{fitness", if(input$twosample) " difference","}
				is equal to \\texttt{",format(RV$res$p.value[2], digit = 5, scientific=TRUE),"}.
				That suggests that the ",
			  "\\textbfit{fitness", if(input$twosample) " difference",
				"} is ", if(RV$res$p.value[2] > 0.05) "not ","significantly ",
				if(input$fitalt == "two.sided") "\\textbfit{different from} " else paste("\\textbfit{",input$fitalt," than }",sep=""), " \\texttt{", input$fit0 ,"};",sep="")
			 )
		}
      @
    \end{itemize}

\end{document}
